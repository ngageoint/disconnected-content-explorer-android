apply plugin: 'com.android.application'

def googleMapsApiReleaseKey = hasProperty('RELEASE_MAPS_DICE_API_KEY') ? RELEASE_MAPS_DICE_API_KEY: ''
def googleMapsApiKeyDebug = hasProperty('DEBUG_MAPS_API_KEY') ? DEBUG_MAPS_API_KEY: ''

project.ext {
    archivesBaseName = 'dice'
}

android {
    compileSdkVersion 24
    buildToolsVersion '23.0.3'

    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        multiDexEnabled true
        versionCode 7
        versionName '1.0'
        applicationId 'mil.nga.giat.dice'
        testApplicationId 'mil.nga.giat.dice.test'
    }

    signingConfigs {
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            resValue "string", "GOOGLE_MAPS_ANDROID_API_KEY", googleMapsApiReleaseKey
        }
        debug {
            minifyEnabled false
            resValue "string", "GOOGLE_MAPS_ANDROID_API_KEY", googleMapsApiKeyDebug
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        androidTest {
            resources {
                exclude 'test_reports/*/*'
            }
        }
    }
}

dependencies {
    compile 'com.android.support:support-v13:24.0.0'
    compile 'com.google.android.gms:play-services:8.4.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:cardview-v7:24.0.0'
    compile 'com.android.support:recyclerview-v7:24.0.0'
    compile 'com.vividsolutions:jts:1.13'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.1'
    compile "mil.nga.geopackage.map:geopackage-android-map:1.3.1"

    androidTestCompile 'org.hamcrest:hamcrest-core:1.3'
}

configure extensions.android, {
    if (project.hasProperty('RELEASE_STORE_FILE') && new File((String)project.getProperty('RELEASE_STORE_FILE')).exists()) {
        signingConfigs {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
        buildTypes {
            release {
                setSigningConfig(signingConfigs.release)
            }
        }
    }
    else {
        println 'no release keystore configured'
    }
}
